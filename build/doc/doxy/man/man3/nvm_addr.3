.TH "nvm_addr" 3 "Tue May 1 2018" "Version 0.0.1" "liblightnvm" \" -*- nroff -*-
.ad l
.nh
.SH NAME
nvm_addr \- 
.PP
Encapsulation of generic physical nvm addressing\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <liblightnvm\&.h>\fP
.SS "Data Fields"

.in +1c
.ti -1c
.RI "union {"
.br
.ti -1c
.RI "   struct {"
.br
.ti -1c
.RI "      uint64_t \fBblk\fP: 16"
.br
.RI "\fIBlock address\&. \fP"
.ti -1c
.RI "      uint64_t \fBpg\fP: 16"
.br
.RI "\fIPage address\&. \fP"
.ti -1c
.RI "      uint64_t \fBsec\fP: 8"
.br
.RI "\fISector address\&. \fP"
.ti -1c
.RI "      uint64_t \fBpl\fP: 8"
.br
.RI "\fIPlane address\&. \fP"
.ti -1c
.RI "      uint64_t \fBlun\fP: 8"
.br
.RI "\fILUN address\&. \fP"
.ti -1c
.RI "      uint64_t \fBch\fP: 7"
.br
.RI "\fIChannel address\&. \fP"
.ti -1c
.RI "      uint64_t \fBrsvd\fP: 1"
.br
.RI "\fIReserved\&. \fP"
.ti -1c
.RI "   } \fBg\fP"
.br
.RI "\fIAddress packing and geometric accessors\&. \fP"
.ti -1c
.RI "   struct {"
.br
.ti -1c
.RI "      uint64_t \fBline\fP: 63"
.br
.RI "\fIAddress line\&. \fP"
.ti -1c
.RI "      uint64_t \fBis_cached\fP: 1"
.br
.RI "\fICache hint? \fP"
.ti -1c
.RI "   } \fBc\fP"
.br
.ti -1c
.RI "   uint64_t \fBppa\fP"
.br
.RI "\fIAddress as ppa\&. \fP"
.ti -1c
.RI "}; "
.br
.in -1c
.SH "Detailed Description"
.PP 
Encapsulation of generic physical nvm addressing\&. 

Although the user need not worry about device specific address formats the user has to know and respect addressing within device specific geometric boundaries\&.
.PP
For that purpose one can use the `struct nvm_geo` of an `struct nvm_dev` to obtain device specific geometries\&. 
.SH "Field Documentation"
.PP 
.SS "union { \&.\&.\&. } "
.SS "uint64_t \fBnvm_addr::blk\fP"
.PP
Block address\&. 
.SS "struct { \&.\&.\&. }   \fBnvm_addr::c\fP"
.SS "uint64_t \fBnvm_addr::ch\fP"
.PP
Channel address\&. 
.SS "struct { \&.\&.\&. }   \fBnvm_addr::g\fP"
.PP
Address packing and geometric accessors\&. 
.SS "uint64_t \fBnvm_addr::is_cached\fP"
.PP
Cache hint? 
.SS "uint64_t \fBnvm_addr::line\fP"
.PP
Address line\&. 
.SS "uint64_t \fBnvm_addr::lun\fP"
.PP
LUN address\&. 
.SS "uint64_t \fBnvm_addr::pg\fP"
.PP
Page address\&. 
.SS "uint64_t \fBnvm_addr::pl\fP"
.PP
Plane address\&. 
.SS "uint64_t \fBnvm_addr::ppa\fP"
.PP
Address as ppa\&. 
.SS "uint64_t \fBnvm_addr::rsvd\fP"
.PP
Reserved\&. 
.SS "uint64_t \fBnvm_addr::sec\fP"
.PP
Sector address\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for liblightnvm from the source code\&.
