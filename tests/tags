!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
FLUSH_ALL	test_bbt.c	10;"	d	file:
SEED	test_addr_rio.c	10;"	d	file:
SEED	test_vblk.c	/^static int SEED = 1337;$/;"	v	file:
VERBOSE	test_addr_rio.c	/^static int VERBOSE = 0;$/;"	v	file:
VERBOSE	test_bbt.c	/^static int VERBOSE = 0;$/;"	v	file:
VERBOSE	test_vblk.c	/^static int VERBOSE = 0;$/;"	v	file:
_test_1ADDR	test_addr_io.c	/^void _test_1ADDR(int use_meta)$/;"	f
_test_BBT_GET	test_bbt.c	/^void _test_BBT_GET(int bbts_cached)$/;"	f
_test_BBT_MARK_NADDR	test_bbt.c	/^void _test_BBT_MARK_NADDR(unsigned int naddr_pr_call, int bbts_cached)$/;"	f
_test_BBT_SET	test_bbt.c	/^void _test_BBT_SET(int bbts_cached)$/;"	f
_test_FMT_CONV	test_addr_conv.c	/^void _test_FMT_CONV(int func)$/;"	f
_test_NADDR	test_addr_io.c	/^void _test_NADDR(int use_meta, int pmode)$/;"	f
_test_NADDR	test_addr_rio.c	/^void _test_NADDR(int naddrs, int pmode)$/;"	f
_test_VBLK	test_vblk.c	/^void _test_VBLK(int test_expected_read_fail)$/;"	f
_verify_counters	test_bbt.c	/^void _verify_counters(struct nvm_dev *dev, const struct nvm_bbt *bbt)$/;"	f
blk	test_addr_rio.c	/^static struct nvm_vblk *blk;$/;"	v	typeref:struct:nvm_vblk	file:
blk	test_vblk.c	/^static int blk = 0;$/;"	v	file:
blk_addr	test_addr_io.c	/^static struct nvm_addr blk_addr;$/;"	v	typeref:struct:nvm_addr	file:
block	test_addr_io.c	/^static int block = 10;$/;"	v	file:
block	test_addr_rio.c	/^static int block = 10;$/;"	v	file:
buf_r	test_vblk.c	/^char *buf_w, *buf_r;$/;"	v
buf_w	test_vblk.c	/^char *buf_w, *buf_r;$/;"	v
ch_bgn	test_addr_rio.c	/^static int ch_bgn = 0;$/;"	v	file:
ch_bgn	test_vblk.c	/^static int ch_bgn = 0;$/;"	v	file:
ch_end	test_addr_rio.c	/^static int ch_end = 0;$/;"	v	file:
ch_end	test_vblk.c	/^static int ch_end = 0;$/;"	v	file:
channel	test_addr_io.c	/^static int channel = 0;$/;"	v	file:
channel	test_bbt.c	/^static int channel = 0;$/;"	v	file:
compare_buffers	test_addr_conv.c	/^size_t compare_buffers(char *expected, char *actual, size_t nbytes)$/;"	f
compare_buffers	test_addr_io.c	/^size_t compare_buffers(char *expected, char *actual, size_t nbytes)$/;"	f
compare_buffers	test_addr_rio.c	/^size_t compare_buffers(char *expected, char *actual, size_t nbytes)$/;"	f
compare_buffers	test_vblk.c	/^size_t compare_buffers(char *expected, char *actual, size_t nbytes)$/;"	f
compare_meta_buffers	test_addr_io.c	/^size_t compare_meta_buffers(char *expected, char *actual, size_t nbytes)$/;"	f
dev	test_addr_conv.c	/^static struct nvm_dev *dev;$/;"	v	typeref:struct:nvm_dev	file:
dev	test_addr_io.c	/^static struct nvm_dev *dev;$/;"	v	typeref:struct:nvm_dev	file:
dev	test_addr_rio.c	/^static struct nvm_dev *dev;$/;"	v	typeref:struct:nvm_dev	file:
dev	test_bbt.c	/^static struct nvm_dev *dev;$/;"	v	typeref:struct:nvm_dev	file:
dev	test_vblk.c	/^static struct nvm_dev *dev;$/;"	v	typeref:struct:nvm_dev	file:
geo	test_addr_conv.c	/^static const struct nvm_geo *geo;$/;"	v	typeref:struct:nvm_geo	file:
geo	test_addr_io.c	/^static const struct nvm_geo *geo;$/;"	v	typeref:struct:nvm_geo	file:
geo	test_addr_rio.c	/^static const struct nvm_geo *geo;$/;"	v	typeref:struct:nvm_geo	file:
geo	test_bbt.c	/^static const struct nvm_geo *geo;$/;"	v	typeref:struct:nvm_geo	file:
geo	test_vblk.c	/^static const struct nvm_geo *geo;$/;"	v	typeref:struct:nvm_geo	file:
lun	test_addr_io.c	/^static int lun = 0;$/;"	v	file:
lun	test_bbt.c	/^static int lun = 0;$/;"	v	file:
lun_addr	test_bbt.c	/^static struct nvm_addr lun_addr;$/;"	v	typeref:struct:nvm_addr	file:
lun_bgn	test_addr_rio.c	/^static int lun_bgn = 0;$/;"	v	file:
lun_bgn	test_vblk.c	/^static int lun_bgn = 0;$/;"	v	file:
lun_end	test_addr_rio.c	/^static int lun_end = 0;$/;"	v	file:
lun_end	test_vblk.c	/^static int lun_end = 0;$/;"	v	file:
main	test_addr_conv.c	/^int main(int argc, char **argv)$/;"	f
main	test_addr_io.c	/^int main(int argc, char **argv)$/;"	f
main	test_addr_rio.c	/^int main(int argc, char **argv)$/;"	f
main	test_bbt.c	/^int main(int argc, char **argv)$/;"	f
main	test_dev.c	/^int main(int argc, char **argv)$/;"	f
main	test_vblk.c	/^int main(int argc, char **argv)$/;"	f
nbytes	test_vblk.c	/^size_t nbytes;$/;"	v
nstates	test_bbt.c	/^static int nstates = sizeof(states) \/ sizeof(states[0]);$/;"	v	file:
nvm_dev_path	test_addr_conv.c	/^static char nvm_dev_path[NVM_DEV_PATH_LEN] = "\/dev\/nvme2n1";$/;"	v	file:
nvm_dev_path	test_addr_io.c	/^static char nvm_dev_path[NVM_DEV_PATH_LEN] = "\/dev\/nvme2n1";$/;"	v	file:
nvm_dev_path	test_addr_rio.c	/^static char nvm_dev_path[NVM_DEV_PATH_LEN] = "\/dev\/nvme2n1";$/;"	v	file:
nvm_dev_path	test_bbt.c	/^static char nvm_dev_path[NVM_DEV_PATH_LEN] = "\/dev\/nvme2n1";$/;"	v	file:
nvm_dev_path	test_dev.c	/^static char nvm_dev_path[NVM_DEV_PATH_LEN] = "\/dev\/nvme2n1";$/;"	v	file:
nvm_dev_path	test_vblk.c	/^static char nvm_dev_path[NVM_DEV_PATH_LEN] = "\/dev\/nvme2n1";$/;"	v	file:
print_mismatch	test_addr_io.c	/^void print_mismatch(char *expected, char *actual, size_t nbytes)$/;"	f
print_mismatch	test_addr_rio.c	/^void print_mismatch(char *expected, char *actual, size_t nbytes)$/;"	f
print_mismatch	test_vblk.c	/^void print_mismatch(char *expected, char *actual, size_t nbytes)$/;"	f
rand_offset	test_vblk.c	/^size_t rand_offset(size_t nbytes, size_t count, size_t align)$/;"	f
setup	test_addr_conv.c	/^int setup(void)$/;"	f
setup	test_addr_io.c	/^int setup(void)$/;"	f
setup	test_addr_rio.c	/^int setup(void)$/;"	f
setup	test_bbt.c	/^int setup(void)$/;"	f
setup	test_vblk.c	/^int setup(void)$/;"	f
states	test_bbt.c	/^static enum nvm_bbt_state states[] = {$/;"	v	typeref:enum:nvm_bbt_state	file:
teardown	test_addr_conv.c	/^int teardown(void)$/;"	f
teardown	test_addr_io.c	/^int teardown(void)$/;"	f
teardown	test_addr_rio.c	/^int teardown(void)$/;"	f
teardown	test_bbt.c	/^int teardown(void)$/;"	f
teardown	test_vblk.c	/^int teardown(void)$/;"	f
test_1ADDR_META0_SNGL	test_addr_io.c	/^void test_1ADDR_META0_SNGL(void)$/;"	f
test_1ADDR_META1_SNGL	test_addr_io.c	/^void test_1ADDR_META1_SNGL(void)$/;"	f
test_BBT_GET	test_bbt.c	/^void test_BBT_GET(void)$/;"	f
test_BBT_GET_CACHED	test_bbt.c	/^void test_BBT_GET_CACHED(void)$/;"	f
test_BBT_MARK_NADDR_1	test_bbt.c	/^void test_BBT_MARK_NADDR_1(void)$/;"	f
test_BBT_MARK_NADDR_1_CACHED	test_bbt.c	/^void test_BBT_MARK_NADDR_1_CACHED(void)$/;"	f
test_BBT_MARK_NADDR_MAX	test_bbt.c	/^void test_BBT_MARK_NADDR_MAX(void)$/;"	f
test_BBT_MARK_NADDR_MAX2	test_bbt.c	/^void test_BBT_MARK_NADDR_MAX2(void)$/;"	f
test_BBT_MARK_NADDR_MAX2_CACHED	test_bbt.c	/^void test_BBT_MARK_NADDR_MAX2_CACHED(void)$/;"	f
test_BBT_MARK_NADDR_MAX4	test_bbt.c	/^void test_BBT_MARK_NADDR_MAX4(void)$/;"	f
test_BBT_MARK_NADDR_MAX4_CACHED	test_bbt.c	/^void test_BBT_MARK_NADDR_MAX4_CACHED(void)$/;"	f
test_BBT_MARK_NADDR_MAX_CACHED	test_bbt.c	/^void test_BBT_MARK_NADDR_MAX_CACHED(void)$/;"	f
test_BBT_SET	test_bbt.c	/^void test_BBT_SET(void)$/;"	f
test_BBT_SET_CACHED	test_bbt.c	/^void test_BBT_SET_CACHED(void)$/;"	f
test_DEV_OPENF_IOCTL_CLOSE	test_dev.c	/^void test_DEV_OPENF_IOCTL_CLOSE(void)$/;"	f
test_DEV_OPENF_SYSFS_CLOSE	test_dev.c	/^void test_DEV_OPENF_SYSFS_CLOSE(void)$/;"	f
test_DEV_OPEN_CLOSE	test_dev.c	/^void test_DEV_OPEN_CLOSE(void)$/;"	f
test_DEV_OPEN_CLOSE_N	test_dev.c	/^void test_DEV_OPEN_CLOSE_N(void)$/;"	f
test_FMT_GEN_DEV	test_addr_conv.c	/^void test_FMT_GEN_DEV(void)$/;"	f
test_FMT_GEN_DEV_LBA	test_addr_conv.c	/^void test_FMT_GEN_DEV_LBA(void)$/;"	f
test_FMT_GEN_DEV_OFF	test_addr_conv.c	/^void test_FMT_GEN_DEV_OFF(void)$/;"	f
test_FMT_GEN_LBA	test_addr_conv.c	/^void test_FMT_GEN_LBA(void)$/;"	f
test_FMT_GEN_OFF	test_addr_conv.c	/^void test_FMT_GEN_OFF(void)$/;"	f
test_NADDR_1_SNGL	test_addr_rio.c	/^void test_NADDR_1_SNGL(void)$/;"	f
test_NADDR_2_SNGL	test_addr_rio.c	/^void test_NADDR_2_SNGL(void)$/;"	f
test_NADDR_MAX_SNGL	test_addr_rio.c	/^void test_NADDR_MAX_SNGL(void)$/;"	f
test_NADDR_META0_DUAL	test_addr_io.c	/^void test_NADDR_META0_DUAL(void)$/;"	f
test_NADDR_META0_QUAD	test_addr_io.c	/^void test_NADDR_META0_QUAD(void)$/;"	f
test_NADDR_META0_SNGL	test_addr_io.c	/^void test_NADDR_META0_SNGL(void)$/;"	f
test_NADDR_META1_DUAL	test_addr_io.c	/^void test_NADDR_META1_DUAL(void)$/;"	f
test_NADDR_META1_QUAD	test_addr_io.c	/^void test_NADDR_META1_QUAD(void)$/;"	f
test_NADDR_META1_SNGL	test_addr_io.c	/^void test_NADDR_META1_SNGL(void)$/;"	f
test_VBLK_PE_PR_PW_PR	test_vblk.c	/^void test_VBLK_PE_PR_PW_PR(void)$/;"	f
test_VBLK_PE_PW_PR	test_vblk.c	/^void test_VBLK_PE_PW_PR(void)$/;"	f
test_VBLK_RAND	test_vblk.c	/^void test_VBLK_RAND(void)$/;"	f
vblk	test_vblk.c	/^struct nvm_vblk *vblk;$/;"	v	typeref:struct:nvm_vblk
vblk_off2addr	test_addr_rio.c	/^struct nvm_addr vblk_off2addr(struct nvm_vblk *vblk, size_t offset)$/;"	f
